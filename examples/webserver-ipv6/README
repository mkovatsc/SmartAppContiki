This example features a simple webserver running on top of the IPv6
contiki stack.

For this example to run properly the UIP_CONF_TCP compilation flag
must be set to 1 in the contiki-conf.h file of the platform.

If you are using the minimal-net platform on linux you can test the
code as follows:
- First do 'ifconfig tap0 inet6 3ffe:0501:ffff:0100:0206:98ff:fe00:0231'
  or 'ip -6 address add 3ffe:0501:ffff:0100:0206:98ff:fe00:0231' dev tap0.
- You might need to add a route 'ip -6 route add 
  aaaa:0000:0000:0000:0206:98ff:fe00:0232/64 dev tap0' 
- Then configure a global address by sending a router advertisement (RA)
  with a prefix option. You can use radvd for example to generate such a
  packet. 
  Note: You should set the preferred and valid lifetime to reasonable
  value to avoid clock wrap-around. E.g.:
        AdvPreferredLifetime 400; 
        AdvValidLifetime 600;
  Assume the prefix in the RA is:
  3ffe:0501:ffff:0100:0000:0000:0000:0000/64.
  and that the resulting address created by the contiki stack is: 
  3ffe:0501:ffff:0100:0206:98ff:fe00:0232
- Finally you can use 'wget http://[3ffe:0501:ffff:0100:0206:98ff:fe00:0232]' 
  to get the web page (index.html file)
  
  The default webserver and content is in /apps/webserver/...
  Change that using e.g. 
  $make clean
  $make WITH_WEBSERVER=webserver-nano
  $make TARGET=redbee-econotag WITH_WEBSERVER=webserver-nano
  $make TARGET=avr-raven WITH_WEBSERVER=raven-webserver
  
  ******** Make clean when switching webservers! **********